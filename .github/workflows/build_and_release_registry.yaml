name: "Build And Release Registry"

on:
  push:
    branches-ignore:
      - "**"
    tags:
      - v*

concurrency:
  group: build-and-release-registry-${{ github.event.repository.name }}-${{ github.ref }}
  cancel-in-progress: false

env:
  disable_action: ${{ secrets.DISABLE_ACTION }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        if: ${{ env.disable_action != 'YES' }}
        uses: actions/checkout@v4
      - name: Install terraform
        if: ${{ env.disable_action != 'YES' }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.4
      - name: Terraform Init
        if: ${{ env.disable_action != 'YES' }}
        id: init
        shell: sh
        run: |
          terraform init \
            -backend-config="region=${{ secrets.TERRAFORM_BACKEND_S3_REGION }}" \
            -backend-config="bucket=${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}" \
            -backend-config="key=${{ secrets.TERRAFORM_BACKEND_S3_KEY }}"
        working-directory: terraform
      - name: Terraform Format
        if: ${{ env.disable_action != 'YES' }}
        id: fmt
        shell: sh
        run: terraform fmt -check
        working-directory: terraform
      - name: Terraform Validate
        if: ${{ env.disable_action != 'YES' }}
        id: validate
        shell: sh
        run: terraform validate -no-color
        working-directory: terraform
      - name: Terraform Apply
        if: ${{ env.disable_action != 'YES' && github.ref == 'refs/heads/main' }}
        id: apply
        shell: sh
        working-directory: terraform
        run: |
          terraform apply \
            -no-color \
            -auto-approve \
            -input=false
      - name: Set up Elixir
        if: ${{ env.disable_action != 'YES' }}
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
